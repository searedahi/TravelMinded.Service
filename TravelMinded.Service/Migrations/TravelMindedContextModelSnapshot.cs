// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelMinded.Service.DAL;

namespace TravelMinded.Service.Migrations
{
    [DbContext(typeof(TravelMindedContext))]
    partial class TravelMindedContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TravelMinded.Service.DAL.DbModel.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Currency");

                    b.Property<string>("Description");

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.Property<string>("ShortName");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("TravelMinded.Service.DAL.DbModel.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId");

                    b.Property<string>("Currency");

                    b.Property<string>("Description");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.Property<string>("ShortName");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Products");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Product");
                });

            modelBuilder.Entity("TravelMinded.Service.DAL.DbModel.Experience", b =>
                {
                    b.HasBaseType("TravelMinded.Service.DAL.DbModel.Product");

                    b.Property<int?>("CompanyId1");

                    b.Property<int>("Duration");

                    b.HasIndex("CompanyId1");

                    b.ToTable("Experience");

                    b.HasDiscriminator().HasValue("Experience");
                });

            modelBuilder.Entity("TravelMinded.Service.DAL.DbModel.Product", b =>
                {
                    b.HasOne("TravelMinded.Service.DAL.DbModel.Company", "Company")
                        .WithMany("Products")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("TravelMinded.Service.DAL.DbModel.Experience", b =>
                {
                    b.HasOne("TravelMinded.Service.DAL.DbModel.Company")
                        .WithMany("Experiences")
                        .HasForeignKey("CompanyId1");
                });
#pragma warning restore 612, 618
        }
    }
}
